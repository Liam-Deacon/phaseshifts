---
name: Publish Package

on:
  release: {}
  workflow_dispatch:
    inputs:
      version:
        description: Version to upload
        default: ''
      pypi_repo:
        description: PyPI Repo
        type: choice
        options:
          - pypi
          - testpypi
        default: testpypi
        required: true

env:
  CIBW_ARCHS_LINUX: x86_64 i686 aarch64  # aarch64 is included as useful for rpi4+
  CIBW_BEFORE_BUILD: pip install numpy
  CIBW_ENVIRONMENT_PASS_LINUX: PHASESHIFTS_VERSION
  CIBW_TEST_COMMAND: python -c "import phaseshifts.phsh"  # most simple, yet effective sanity check
  CIBW_TEST_EXTRAS: ''
  CIBW_TEST_REQUIRES: ''
  PHASESHIFTS_VERSION: ${{ github.event.inputs.version }}

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build Source Dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      # TODO: Figure out how to create a sdist zip for Windows
      - name: Build sdist
        run: |
          make install-deps && \
          pip install build && \
          python -m build --sdist --no-isolation
        shell: bash
        env:
          PHASESHIFTS_VERSION: ${{ github.event.inputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/

  build_wheels_linux:
    name: Build Linux Wheels
    runs-on: ubuntu-latest
    needs: build_sdist
    steps:
      - uses: actions/checkout@v4
      # TODO: Remove when we drop support for older python versions
      - name: Build legacy wheels
        uses: pypa/cibuildwheel@v1.12.0
        with:
          output-dir: dist/
        env:
          CIBW_ARCHS: x86_64 i686
          CIBW_BUILD: cp27-* cp35-*
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        with:
          output-dir: dist/
        env:
          CIBW_SKIP: cp38-*  # Known issue with linux CPython 3.8, see #67
      - uses: actions/upload-artifact@v4
        with:
          name: linux
          path: dist/

  build_wheels_macos:
    name: Build Mac Wheels
    runs-on: macos-latest
    needs: build_sdist
    steps:
      - uses: actions/checkout@v4
      # https://github.com/AntoineD/pdfo/blob/f6a45b3921807ad99a438f65ee2b01fa193038bb/.github/workflows/build_wheels.yml#L14C1-L23C1
      - name: Provide gfortran (macOS)
        if: runner.os == 'macOS'
        run: |
          # https://github.com/actions/virtual-environments/issues/2524
          # https://github.com/cbg-ethz/dce/blob/master/.github/workflows/pkgdown.yaml
          sudo ln -s /usr/local/bin/gfortran-12 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@12/*/lib/gcc/12 /usr/local/gfortran/lib
          gfortran --version
      - name: Build x86_64 wheels
        uses: pypa/cibuildwheel@v2.16.2
        with:
          output-dir: dist/
        env:
          CIBW_ARCHS_MACOS: x86_64
      - name: Build arm64 wheels
        uses: pypa/cibuildwheel@v2.16.2
        with:
          output-dir: dist/
        env:
          CIBW_ARCHS_MACOS: arm64
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: ''
      - uses: actions/upload-artifact@v4
        with:
          name: macos
          path: dist/

  build_wheels_windows:
    name: Build Windows Wheels
    runs-on: windows-latest
    needs: build_sdist
    steps:
      - uses: actions/checkout@v4

      # TODO: Remove when we drop support for older python versions
      - name: Setup Python 2.7
        uses: gabrielfalcao/pyenv-action@v18
        with:
          default: "2.7"
          command: pip install -U pip  # upgrade pip after installing python
        continue-on-error: true
      - run: make wheel
        if: success()
      - name: Setup Python 3.5
        uses: gabrielfalcao/pyenv-action@v18
        with:
          default: "3.5"
          command: pip install -U pip  # upgrade pip after installing python
        continue-on-error: true
      - run: make wheel
        if: success()

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        with:
          output-dir: dist/
      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: dist/

      - name: Tell distutils to use mingw (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "[build]`ncompiler=mingw32" | Out-File -Encoding ASCII ~/pydistutils.cfg

      - name: Build legacy wheels
        uses: pypa/cibuildwheel@v1.12.0
        with:
          output-dir: dist/
        env:
          CIBW_BUILD: cp27-* cp35-*

  publish_to_testpypi:
    name: Publish to TestPyPI
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'release' && github.event.inputs.pypi_repo == 'testpypi' }}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    needs:
      - build_sdist
      - build_wheels_linux
      - build_wheels_macos
      - build_wheels_windows
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: path/to/artifacts
          merge-multiple: true
      - name: Publish package artifacts to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.8.5
        with:
          repository-url: https://test.pypi.org/legacy/

  publish_to_pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.pypi_repo == 'pypi' || github.event_name == 'release' }}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    needs:
      - build_sdist
      - build_wheels_linux
      - build_wheels_macos
      - build_wheels_windows
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: path/to/artifacts
          merge-multiple: true
      - name: Publish artifacts to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          print-hash: true
          verbose: true

  publish_release_artifacts:
    name: Upload release artifacts
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' }}
    permissions:
      contents: write
    needs:
      - build_sdist
      - build_wheels_linux
      - build_wheels_macos
      - build_wheels_windows
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: path/to/artifacts
          merge-multiple: true
      - name: Upload wheels
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
