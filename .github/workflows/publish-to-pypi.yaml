name: Publish Package

on:
  release:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version upload to pypi'
        default: master
      pypi_repo:
        description: 'Repo to upload to (testpypi or pypi)'
        default: 'testpypi'
        required: true

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build sdists
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version || github.ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      # TODO: Figure out how to create a sdist zip for Windows
      - name: Build sdist
        run: |
          make install-deps && \
          pip install build && \
          python -m build --sdist --no-isolation
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/

  build_wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    needs: build_sdist
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version || github.ref }}
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        with:
          output-dir: dist/
        env:
          CIBW_BEFORE_BUILD: pip install numpy
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_LINUX: x86_64 aarch64 ppc64le
      # TODO: Remove 2.7 when we drop support for older python versions
      - uses: gabrielfalcao/pyenv-action@v18
        with:
          default: "2.7"
          command: pip install -U pip  # upgrade pip after installing python
      - name: Build wheel
        run: make wheel
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: dist/

  publish_to_testpypi:
    name: Publish to TestPyPI
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'release' && github.event.inputs.pypi_repo == 'testpypi' }}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    needs:
      - build_sdist
      - build_wheels
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: path/to/artifacts
          merge-multiple: true
      - name: Publish package artifacts to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.8.5
        with:
          repository-url: https://test.pypi.org/legacy/

  publish_to_pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.pypi_repo == 'pypi' || github.event_name == 'release' }}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    needs:
      - build_sdist
      - build_wheels
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: path/to/artifacts
          merge-multiple: true
      - name: Publish artifacts to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          print-hash: true
          verbose: true

  publish_release_artifacts:
    name: Upload release artifacts
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' }}
    permissions:
      contents: write
    needs:
      - build_sdist
      - build_wheels
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: path/to/artifacts
          merge-multiple: true
      - name: Upload wheels
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true