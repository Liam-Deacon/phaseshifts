!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module libphsh ! in
    interface  ! in :libphsh
        subroutine hartfock(input_file) ! in :libphsh:libphsh.f
            character*255 intent(in) :: input_file
        end subroutine hartfock
        subroutine abinitio(etot,nst,rel,alfa,nr,r,dr,r2,dl,phe,njrc,vi,zorig,xntot,nel,no,nl,xnj,ev,occ,is,ek,orb,iuflag) ! in :libphsh:libphsh.f
            double precision :: etot
            integer :: nst
            double precision :: rel
            double precision :: alfa
            integer :: nr
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision :: dl
            double precision dimension(4000,33) :: phe
            integer dimension(4) :: njrc
            double precision dimension(4000,7) :: vi
            double precision :: zorig
            double precision :: xntot
            integer :: nel
            integer dimension(33) :: no
            integer dimension(33) :: nl
            double precision dimension(33) :: xnj
            double precision dimension(33) :: ev
            double precision dimension(33) :: occ
            integer dimension(33) :: is
            double precision dimension(33) :: ek
            double precision dimension(4000,33) :: orb
            integer :: iuflag
        end subroutine abinitio
        subroutine atsolve(etot,nst,rel,alfa,eerror,nfc,nr,r,dr,r2,dl,phe,njrc,vi,zorig,xntot,nel,no,nl,nm,xnj,ev,occ,is,ek,ratio,orb,rpower,xnum,etot2,iuflag) ! in :libphsh:libphsh.f
            double precision :: etot
            integer :: nst
            double precision :: rel
            double precision :: alfa
            double precision :: eerror
            integer :: nfc
            integer :: nr
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision :: dl
            double precision dimension(4000,33) :: phe
            integer dimension(4) :: njrc
            double precision dimension(4000,7) :: vi
            double precision :: zorig
            double precision :: xntot
            integer :: nel
            integer dimension(33) :: no
            integer dimension(33) :: nl
            integer dimension(33) :: nm
            double precision dimension(33) :: xnj
            double precision dimension(33) :: ev
            double precision dimension(33) :: occ
            integer dimension(33) :: is
            double precision dimension(33) :: ek
            double precision :: ratio
            double precision dimension(4000,33) :: orb
            double precision dimension(4000,16) :: rpower
            double precision :: xnum
            double precision :: etot2
            integer :: iuflag
        end subroutine atsolve
        subroutine getpot(etot,nst,rel,alfa,dl,nr,dr,r,r2,xntot,phe,ratio,orb,occ,is,nel,nl,nm,no,xnj,rpower,xnum,etot2,iuflag) ! in :libphsh:libphsh.f
            double precision :: etot
            integer :: nst
            double precision :: rel
            double precision :: alfa
            double precision :: dl
            integer :: nr
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r
            double precision dimension(4000) :: r2
            double precision :: xntot
            double precision dimension(4000,33) :: phe
            double precision :: ratio
            double precision dimension(4000,33) :: orb
            double precision dimension(33) :: occ
            integer dimension(33) :: is
            integer :: nel
            integer dimension(33) :: nl
            integer dimension(33) :: nm
            integer dimension(33) :: no
            double precision dimension(33) :: xnj
            double precision dimension(4000,16) :: rpower
            double precision :: xnum
            double precision :: etot2
            integer :: iuflag
        end subroutine getpot
        subroutine elsolve(i,occ,n,l,xkappa,xj,zorig,zeff,e,phi,v,q0,xm1,xm2,nr,r,dr,r2,dl,rel) ! in :libphsh:libphsh.f
            integer :: i
            double precision :: occ
            integer :: n
            integer :: l
            double precision :: xkappa
            double precision :: xj
            double precision :: zorig
            double precision :: zeff
            double precision :: e
            double precision dimension(4000) :: phi
            double precision dimension(4000) :: v
            double precision dimension(4000) :: q0
            double precision dimension(4000) :: xm1
            double precision dimension(4000) :: xm2
            integer :: nr
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision :: dl
            double precision :: rel
        end subroutine elsolve
        subroutine augment(e,l,xj,phi,v,nr,r,dl) ! in :libphsh:libphsh.f
            double precision :: e
            integer :: l
            double precision :: xj
            double precision dimension(4000) :: phi
            double precision dimension(4000) :: v
            integer :: nr
            double precision dimension(4000) :: r
            double precision :: dl
        end subroutine augment
        subroutine setqmm(i,orb,l,ns,idoflag,v,zeff,zorig,rel,nr,r,r2,dl,q0,xm1,xm2,njrc,vi) ! in :libphsh:libphsh.f
            integer :: i
            double precision dimension(4000,33) :: orb
            integer :: l
            integer :: ns
            integer :: idoflag
            double precision dimension(4000) :: v
            double precision :: zeff
            double precision :: zorig
            double precision :: rel
            integer :: nr
            double precision dimension(4000) :: r
            double precision dimension(4000) :: r2
            double precision :: dl
            double precision dimension(4000) :: q0
            double precision dimension(4000) :: xm1
            double precision dimension(4000) :: xm2
            integer dimension(4) :: njrc
            double precision dimension(4000,7) :: vi
        end subroutine setqmm
        subroutine initiali(zorig,nr,rmin,rmax,r,dr,r2,dl,njrc,xntot,nel) ! in :libphsh:libphsh.f
            double precision :: zorig
            integer :: nr
            double precision :: rmin
            double precision :: rmax
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision :: dl
            integer dimension(4) :: njrc
            double precision :: xntot
            integer :: nel
        end subroutine initiali
        subroutine setgrid(nr,rmin,rmax,r,dr,r2,dl) ! in :libphsh:libphsh.f
            integer :: nr
            double precision :: rmin
            double precision :: rmax
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision :: dl
        end subroutine setgrid
        subroutine integ(e,l,xkappa,n,nn,istop,ief,x0,phi,z,v,q0,xm1,xm2,nr,r,dr,r2,dl,rel) ! in :libphsh:libphsh.f
            double precision :: e
            integer :: l
            double precision :: xkappa
            integer :: n
            integer :: nn
            integer :: istop
            integer :: ief
            double precision :: x0
            double precision dimension(4000) :: phi
            double precision :: z
            double precision dimension(4000) :: v
            double precision dimension(4000) :: q0
            double precision dimension(4000) :: xm1
            double precision dimension(4000) :: xm2
            integer :: nr
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision :: dl
            double precision :: rel
        end subroutine integ
        subroutine clebschgordan(nel,nl,cg) ! in :libphsh:libphsh.f
            integer :: nel
            integer dimension(33) :: nl
            double precision dimension(7,7,13,13,13) :: cg
        end subroutine clebschgordan
        subroutine pseudo(etot,nst,rel,alfa,nr,rmin,rmax,r,dr,r2,dl,phe,orb,njrc,vi,zorig,xntot,nel,no,nl,xnj,ev,occ,is,ek,iuflag,vctab) ! in :libphsh:libphsh.f
            double precision :: etot
            integer :: nst
            double precision :: rel
            double precision :: alfa
            integer :: nr
            double precision :: rmin
            double precision :: rmax
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision :: dl
            double precision dimension(4000,33) :: phe
            double precision dimension(4000,33) :: orb
            integer dimension(4) :: njrc
            double precision dimension(4000,7) :: vi
            double precision :: zorig
            double precision :: xntot
            integer :: nel
            integer dimension(33) :: no
            integer dimension(33) :: nl
            double precision dimension(33) :: xnj
            double precision dimension(33) :: ev
            double precision dimension(33) :: occ
            integer dimension(33) :: is
            double precision dimension(33) :: ek
            integer :: iuflag
            double precision dimension(4000,4) :: vctab
        end subroutine pseudo
        subroutine parabreg(f,fp,fpp,rf,vf) ! in :libphsh:libphsh.f
            double precision :: f
            double precision :: fp
            double precision :: fpp
            double precision dimension(3) :: rf
            double precision dimension(3) :: vf
        end subroutine parabreg
        function hb(x,factor) ! in :libphsh:libphsh.f
            double precision :: x
            double precision :: factor
            double precision :: hb
        end function hb
        subroutine fitx0(i,orb,rcut,njrc,e,l,xj,n,jrt,xideal,phi,zeff,v,q0,xm1,xm2,nr,r,dr,r2,dl,rel,factor) ! in :libphsh:libphsh.f
            integer :: i
            double precision dimension(4000,33) :: orb
            double precision :: rcut
            integer dimension(4) :: njrc
            double precision :: e
            integer :: l
            double precision :: xj
            integer :: n
            integer :: jrt
            double precision :: xideal
            double precision dimension(4000) :: phi
            double precision :: zeff
            double precision dimension(4000) :: v
            double precision dimension(4000) :: q0
            double precision dimension(4000) :: xm1
            double precision dimension(4000) :: xm2
            integer :: nr
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision :: dl
            double precision :: rel
            double precision :: factor
        end subroutine fitx0
        subroutine pseudize(i,orb,ev,l,xj,n,njrc,zeff,v,q0,xm1,xm2,nr,rmin,rmax,r,dr,r2,dl,rel) ! in :libphsh:libphsh.f
            integer :: i
            double precision dimension(4000,33) :: orb
            double precision :: ev
            integer :: l
            double precision :: xj
            integer :: n
            integer dimension(4) :: njrc
            double precision :: zeff
            double precision dimension(4000) :: v
            double precision dimension(4000) :: q0
            double precision dimension(4000) :: xm1
            double precision dimension(4000) :: xm2
            integer :: nr
            double precision :: rmin
            double precision :: rmax
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision :: dl
            double precision :: rel
        end subroutine pseudize
        subroutine fourier(nr,r,dr,r2,vi) ! in :libphsh:libphsh.f
            integer :: nr
            double precision dimension(4000) :: r
            double precision dimension(4000) :: dr
            double precision dimension(4000) :: r2
            double precision dimension(4000,7) :: vi
        end subroutine fourier
        subroutine getillls(pin) ! in :libphsh:libphsh.f
            double precision dimension(9,9,17) :: pin
        end subroutine getillls
        subroutine hfdisk(iu,ir,etot,nst,rel,nr,rmin,rmax,r,rho,zorig,xntot,ixflag,nel,no,nl,xnj,is,ev,ek,occ,njrc,vi,phe,orb) ! in :libphsh:libphsh.f
            integer :: iu
            integer :: ir
            double precision :: etot
            integer :: nst
            double precision :: rel
            integer :: nr
            double precision :: rmin
            double precision :: rmax
            double precision dimension(4000) :: r
            double precision dimension(4000) :: rho
            double precision :: zorig
            double precision :: xntot
            integer :: ixflag
            integer :: nel
            integer dimension(33) :: no
            integer dimension(33) :: nl
            double precision dimension(33) :: xnj
            integer dimension(33) :: is
            double precision dimension(33) :: ev
            double precision dimension(33) :: ek
            double precision dimension(33) :: occ
            integer dimension(4) :: njrc
            double precision dimension(4000,7) :: vi
            double precision dimension(4000,33) :: phe
            double precision dimension(4000,33) :: orb
        end subroutine hfdisk
        subroutine exchcorr(nst,rel,rr,rh1,rh2,ex,ec,ux1,ux2,uc1,uc2) ! in :libphsh:libphsh.f
            integer :: nst
            double precision :: rel
            double precision :: rr
            double precision :: rh1
            double precision :: rh2
            double precision :: ex
            double precision :: ec
            double precision :: ux1
            double precision :: ux2
            double precision :: uc1
            double precision :: uc2
        end subroutine exchcorr
        function cavpot(mtz_string,slab_flag,atomic_file,cluster_file,mufftin_file,output_file,info_file) ! in :libphsh:libphsh.f
            character*(*) intent(in) :: mtz_string
            integer intent(in) :: slab_flag
            character*(*) intent(in) :: atomic_file
            character*(*) intent(in) :: cluster_file
            character*(*) intent(in) :: mufftin_file
            character*(*) intent(in) :: output_file
            character*(*) intent(in) :: info_file
            double precision dimension(250,14) :: wf2
            double precision dimension(14) :: wc
            integer dimension(14) :: lc
            double precision dimension(250) :: wk1
            double precision dimension(250) :: wk2
            real :: cavpot
            common /wf/ wf2,wc,lc
            common /wk/ wk1,wk2
        end function cavpot
        subroutine chgrid(fx,x,nx,fy,y,ny) ! in :libphsh:libphsh.f
            double precision dimension(nx) :: fx
            double precision dimension(nx),depend(nx) :: x
            integer, optional,check(len(fx)>=nx),depend(fx) :: nx=len(fx)
            double precision dimension(ny) :: fy
            double precision dimension(ny),depend(ny) :: y
            integer, optional,check(len(fy)>=ny),depend(fy) :: ny=len(fy)
        end subroutine chgrid
        subroutine clemin(rho,rx,nx,ngrid) ! in :libphsh:libphsh.f
            double precision dimension(ngrid) :: rho
            double precision dimension(ngrid),depend(ngrid) :: rx
            integer :: nx
            integer, optional,check(len(rho)>=ngrid),depend(rho) :: ngrid=len(rho)
            double precision dimension(250,14) :: wfc
            double precision dimension(14) :: wc
            integer dimension(14) :: lc
            double precision dimension(20) :: ex
            double precision dimension(20) :: fac
            double precision dimension(20) :: fnt
            integer dimension(20) :: nt
            common /wf/ wfc,wc,lc
            common /wk/ ex,fac,fnt,nt
        end subroutine clemin
        subroutine hsin(rho,rx,nx,ngrid) ! in :libphsh:libphsh.f
            double precision dimension(ngrid) :: rho
            double precision dimension(ngrid),depend(ngrid) :: rx
            integer :: nx
            integer, optional,check(len(rho)>=ngrid),depend(rho) :: ngrid=len(rho)
            double precision dimension(250,14) :: wfc
            double precision dimension(14) :: wc
            integer dimension(14) :: lc
            double precision dimension(250) :: rr
            double precision dimension(250) :: rs
            common /wf/ wfc,wc,lc
            common /wk/ rr,rs
        end subroutine hsin
        subroutine mad(vmad,rx,ngrid,rmt,nrr,nx,nr,rc,rk,zm,n,av) ! in :libphsh:libphsh.f
            double precision dimension(ngrid,nr) :: vmad
            double precision dimension(ngrid),depend(ngrid) :: rx
            integer, optional,check(shape(vmad,0)==ngrid),depend(vmad) :: ngrid=shape(vmad,0)
            double precision dimension(nr),depend(nr) :: rmt
            integer dimension(nr),depend(nr) :: nrr
            integer dimension(nr),depend(nr) :: nx
            integer, optional,check(shape(vmad,1)==nr),depend(vmad) :: nr=shape(vmad,1)
            double precision dimension(3,3) :: rc
            double precision dimension(3,n) :: rk
            double precision dimension(n),depend(n) :: zm
            integer, optional,check(shape(rk,1)==n),depend(rk) :: n=shape(rk,1)
            double precision :: av
            double precision dimension(3,3) :: g
            double precision dimension(5) :: vmm
            double precision dimension(5) :: fr
            double precision dimension(3) :: ra
            double precision dimension(3) :: ga
            common /wk/ g,vmm,fr,ra,ga
        end subroutine mad
        subroutine mtz(sig,rho,rx,ngrid,rmt,nrr,nx,nr,rc,rk,n,vhar,vex,alpha,av,nh) ! in :libphsh:libphsh.f
            double precision dimension(ngrid,nr) :: sig
            double precision dimension(ngrid,nr),depend(ngrid,nr) :: rho
            double precision dimension(ngrid),depend(ngrid) :: rx
            integer, optional,check(shape(sig,0)==ngrid),depend(sig) :: ngrid=shape(sig,0)
            double precision dimension(nr),depend(nr) :: rmt
            integer dimension(nr),depend(nr) :: nrr
            integer dimension(nr),depend(nr) :: nx
            integer, optional,check(shape(sig,1)==nr),depend(sig) :: nr=shape(sig,1)
            double precision dimension(3,3) :: rc
            double precision dimension(3,n) :: rk
            integer, optional,check(shape(rk,1)==n),depend(rk) :: n=shape(rk,1)
            double precision :: vhar
            double precision :: vex
            double precision :: alpha
            double precision :: av
            integer :: nh
            double precision dimension(3) :: x
            double precision dimension(3) :: rb
            common /wk/ x,rb
        end subroutine mtz
        subroutine mtzm(vh,vs,rx,ngrid,rmt,rws,jrmt,jrws,vhar,vex) ! in :libphsh:libphsh.f
            double precision dimension(ngrid) :: vh
            double precision dimension(ngrid),depend(ngrid) :: vs
            double precision dimension(ngrid),depend(ngrid) :: rx
            integer, optional,check(len(vh)>=ngrid),depend(vh) :: ngrid=len(vh)
            double precision :: rmt
            double precision :: rws
            integer :: jrmt
            integer :: jrws
            double precision :: vhar
            double precision :: vex
        end subroutine mtzm
        subroutine nbr(ia,na,ad,ncon,nrr,nr,rc,rk,n,rmax,mc) ! in :libphsh:libphsh.f
            integer dimension(mc,nr) :: ia
            integer dimension(mc,nr),depend(mc,nr) :: na
            double precision dimension(mc,nr),depend(mc,nr) :: ad
            integer dimension(nr),depend(nr) :: ncon
            integer dimension(nr),depend(nr) :: nrr
            integer, optional,check(shape(ia,1)==nr),depend(ia) :: nr=shape(ia,1)
            double precision dimension(3,3) :: rc
            double precision dimension(3,n) :: rk
            integer, optional,check(shape(rk,1)==n),depend(rk) :: n=shape(rk,1)
            double precision :: rmax
            integer, optional,check(shape(ia,0)==mc),depend(ia) :: mc=shape(ia,0)
            double precision dimension(3) :: rj
            common /wk/ rj
        end subroutine nbr
        subroutine poison(psq,z,j,w) ! in :libphsh:libphsh.f
            double precision dimension(j) :: psq
            double precision :: z
            integer, optional,check(len(psq)>=j),depend(psq) :: j=len(psq)
            double precision dimension(j),depend(j) :: w
        end subroutine poison
        subroutine rela(rho,rx,nx,ngrid) ! in :libphsh:libphsh.f
            double precision dimension(ngrid) :: rho
            double precision dimension(ngrid),depend(ngrid) :: rx
            integer :: nx
            integer, optional,check(len(rho)>=ngrid),depend(rho) :: ngrid=len(rho)
            double precision dimension(2000) :: rr
            double precision dimension(2000) :: rs
            common /wk/ rr,rs
        end subroutine rela
        subroutine sumax(acc,chi,rx,nx,ncon,ia,na,ad,imax,ngrid,nr) ! in :libphsh:libphsh.f
            double precision dimension(ngrid) :: acc
            double precision dimension(ngrid,nr),depend(ngrid) :: chi
            double precision dimension(ngrid),depend(ngrid) :: rx
            integer dimension(nr),depend(nr) :: nx
            integer, optional,check(len(ia)>=ncon),depend(ia) :: ncon=len(ia)
            integer dimension(ncon) :: ia
            integer dimension(ncon),depend(ncon) :: na
            double precision dimension(ncon),depend(ncon) :: ad
            integer :: imax
            integer, optional,check(len(acc)>=ngrid),depend(acc) :: ngrid=len(acc)
            integer, optional,check(shape(chi,1)==nr),depend(chi) :: nr=shape(chi,1)
        end subroutine sumax
        subroutine phsh_cav(mufftin_file,phasout_file,dataph_file,zph_file) ! in :libphsh:libphsh.f
            character*(*) intent(inout) :: mufftin_file
            character*(*) intent(inout) :: phasout_file
            character*(*) intent(inout) :: dataph_file
            character*(*) intent(inout) :: zph_file
        end subroutine phsh_cav
        subroutine ps(v,rx,ngrid,rad,e,phs,nl,file_unit) ! in :libphsh:libphsh.f
            double precision dimension(ngrid) :: v
            double precision dimension(ngrid),depend(ngrid) :: rx
            integer, optional,check(len(v)>=ngrid),depend(v) :: ngrid=len(v)
            double precision :: rad
            double precision :: e
            double precision dimension(nl) :: phs
            integer, optional,check(len(phs)>=nl),depend(phs) :: nl=len(phs)
            integer intent(in) :: file_unit
        end subroutine ps
        subroutine calcbf(bj,bn,nl,x,file_unit) ! in :libphsh:libphsh.f
            double precision dimension(nl) :: bj
            double precision dimension(nl),depend(nl) :: bn
            integer, optional,check(len(bj)>=nl),depend(bj) :: nl=len(bj)
            double precision :: x
            integer intent(in) :: file_unit
        end subroutine calcbf
        subroutine phsh_wil(mufftin_file,phasout_file,dataph_file,zph_file) ! in :libphsh:libphsh.f
            character*(*) intent(inout) :: mufftin_file
            character*(*) intent(inout) :: phasout_file
            character*(*) intent(inout) :: dataph_file
            character*(*) intent(inout) :: zph_file
            double precision dimension(201) :: r
            double precision dimension(201,15) :: v
            integer :: nr
            integer :: nl
            double precision :: z
            double precision dimension(30,4) :: y
            double precision dimension(30,4) :: f
            integer :: ilst
            double precision :: e1
            double precision :: e2
            integer :: ne
            integer :: ix
            integer :: neuo
            common /cmrv/ r,v,nr,nl,z
            common /cm5/ y,f,ilst
            common /cm16/ e1,e2,ne,ix,neuo
        end subroutine phsh_wil
        subroutine s16 ! in :libphsh:libphsh.f
            double precision dimension(201) :: r
            double precision dimension(201,15) :: v
            integer :: nr
            integer :: nl
            double precision :: z
            double precision :: e1
            double precision :: e2
            integer :: ne
            integer :: ix
            integer :: neuo
            common /cmrv/ r,v,nr,nl,z
            common /cm16/ e1,e2,ne,ix,neuo
        end subroutine s16
        function f12(x,y,z,n) ! in :libphsh:libphsh.f
            real dimension(10) :: x
            real dimension(10) :: y
            double precision :: z
            integer :: n
            double precision :: f12
        end function f12
        subroutine s5(e) ! in :libphsh:libphsh.f
            double precision :: e
            double precision dimension(201) :: r
            double precision dimension(201,15) :: v
            integer :: nr
            integer :: nl
            double precision :: z
            double precision dimension(30,4) :: y
            double precision dimension(30,4) :: f
            integer :: ip1
            common /cmrv/ r,v,nr,nl,z
            common /cm5/ y,f,ip1
        end subroutine s5
        subroutine s10(e) ! in :libphsh:libphsh.f
            double precision :: e
            double precision dimension(201) :: r
            double precision dimension(201,15) :: v
            integer :: nr
            integer :: nl
            double precision :: z
            double precision dimension(30,4) :: y
            double precision dimension(30,4) :: f
            integer :: ilst
            common /cmrv/ r,v,nr,nl,z
            common /cm5/ y,f,ilst
        end subroutine s10
        function f44(l,x) ! in :libphsh:libphsh.f
            integer :: l
            double precision :: x
            double precision :: f44
        end function f44
        function f45(l,x) ! in :libphsh:libphsh.f
            integer :: l
            double precision :: x
            double precision :: f45
        end function f45
        subroutine s41(x,y,n) ! in :libphsh:libphsh.f
            double precision dimension(100) :: x
            double precision dimension(100) :: y
            integer :: n
        end subroutine s41
        subroutine phsh_rel(mufftin_file,phasout_file,dataph_file,inpdat_file) ! in :libphsh:libphsh.f
            use omp_lib
            character*(*) intent(inout) :: mufftin_file
            character*(*) intent(inout) :: phasout_file
            character*(*) intent(inout) :: dataph_file
            character*(*) intent(inout) :: inpdat_file
            double precision :: rmaxi
            double precision dimension(340) :: zp
            double precision :: vs
            integer :: ipt
            integer :: jri
            common /z/ rmaxi
            common /zzzz/ zp,vs,ipt,jri
        end subroutine phsh_rel
        function dlgkap(e,kappa) ! in :libphsh:libphsh.f
            double precision :: e
            integer :: kappa
            double precision :: t
            double precision dimension(340) :: pot
            double precision :: vcz
            integer :: ipt
            integer :: jri
            double precision dimension(340) :: u
            double precision dimension(340) :: w
            double precision :: dlgkap
            common /z/ t
            common /zzzz/ pot,vcz,ipt,jri
            common /radfun/ u,w
        end function dlgkap
        subroutine sbfit(t,e,l,r,jfs) ! in :libphsh:libphsh.f
            double precision :: t
            double precision :: e
            integer :: l
            double precision :: r
            real :: jfs
        end subroutine sbfit
    end interface
end python module libphsh

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
